import networkx as nx
import matplotlib.pyplot as plt
import numpy as np
from scipy.spatial import distance
G=nx.Graph()
G.add_node(1,pos=(100,810))
G.add_node(2,pos=(300,620))
G.add_node(3,pos=(200,700))
G.add_node(4,pos=(600,400))
G.add_node(5,pos=(100,270))
G.add_node(6,pos=(780,700))
G.add_node(7,pos=(50,200))
G.add_node(8,pos=(750,820))
G.add_node(9,pos=(400,200))
G.add_node(10,pos=(580,800))
G.add_node(11,pos=(850,800))
G.add_node(12,pos=(600,200))
G.add_node(13,pos=(410,830))
G.add_node(14,pos=(600,650))
G.add_node(15,pos=(850,410))
G.add_node(16,pos=(450,450))
G.add_node(17,pos=(600,950))
G.add_node(18,pos=(180,370))
G.add_node(19,pos=(220,220))
G.add_node(20,pos=(160,550))

X=nx.Graph()
X.add_node(21,pos=(204,115))
X.add_node(22,pos=(840,160))
X.add_node(23,pos=(385,500))
X.add_node(24,pos=(610,540))
X.add_node(25,pos=(290,900))



G.nodes[1]['channel']=1
G.nodes[2]['channel']=1
G.nodes[3]['channel']=1
G.nodes[4]['channel']=3
G.nodes[5]['channel']=3
G.nodes[6]['channel']=4
G.nodes[7]['channel']=2
G.nodes[8]['channel']=4
G.nodes[9]['channel']=2
G.nodes[10]['channel']=3
G.nodes[11]['channel']=4
G.nodes[12]['channel']=3
G.nodes[13]['channel']=1
G.nodes[14]['channel']=4
G.nodes[15]['channel']=3
G.nodes[16]['channel']=4
G.nodes[17]['channel']=4
G.nodes[18]['channel']=2
G.nodes[19]['channel']=1
G.nodes[20]['channel']=2
#G.add_edges_from([(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(1,11),(1,12),(1,13),(1,14),(1,15),(1,16),(1,17),(1,18),(1,19),(1,20)])
#G.add_edges_from([(2,1),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(2,10),(2,11),(2,12),(2,13),(2,14),(2,15),(2,16),(2,17),(2,18),(2,19),(2,20)])
#G.add_edges_from([(3,1),(3,2),(3,4),(3,5),(3,6),(3,7),(3,8),(3,9),(3,10),(3,11),(3,12),(3,13),(3,14),(3,15),(3,16),(3,17),(3,18),(3,19),(3,20)])
#G.add_edges_from([(4,1),(4,2),(4,3),(4,5),(4,6),(4,7),(4,8),(4,9),(4,10),(4,12),(4,11),(4,13),(4,14),(4,15),(4,16),(4,17),(4,18),(4,19),(4,20)])
#G.add_edges_from([(5,2),(5,3),(5,4),(5,1),(5,6),(5,7),(5,8),(5,9),(5,10),(5,11),(5,12),(5,13),(5,14),(5,15),(5,16),(5,17),(5,18),(5,19),(5,20)])
#G.add_edges_from([(6,2),(6,3),(6,4),(6,5),(6,1),(6,7),(6,8),(6,9),(6,10),(6,11),(6,12),(6,13),(6,14),(6,15),(6,16),(6,17),(6,18),(6,19),(6,20)])
#G.add_edges_from([(7,2),(7,3),(7,4),(7,5),(7,6),(7,1),(7,8),(7,9),(7,10),(7,11),(7,12),(7,13),(7,14),(7,15),(7,16),(7,17),(7,18),(7,19),(7,20)])
#G.add_edges_from([(8,2),(8,3),(8,4),(8,5),(8,6),(8,7),(8,1),(8,9),(8,10),(8,11),(8,12),(8,13),(8,14),(8,15),(8,16),(8,17),(8,18),(8,19),(8,20)])
#G.add_edges_from([(9,2),(9,3),(9,4),(9,5),(9,6),(9,7),(9,8),(9,1),(9,10),(9,11),(9,12),(9,13),(9,14),(9,15),(9,16),(9,17),(9,18),(9,19),(9,20)])
#G.add_edges_from([(10,2),(10,3),(10,4),(10,5),(10,6),(10,7),(10,8),(10,9),(10,1),(10,11),(10,12),(10,13),(10,14),(10,15),(10,16),(10,17),(10,18),(10,19),(10,20)])
#G.add_edges_from([(11,2),(11,3),(11,4),(11,5),(11,6),(11,7),(11,8),(11,9),(11,10),(11,1),(11,12),(11,13),(11,14),(11,15),(11,16),(11,17),(11,18),(11,19),(11,20)])
#G.add_edges_from([(12,2),(12,3),(12,4),(12,5),(12,6),(12,7),(12,8),(12,9),(12,10),(12,11),(12,1),(12,13),(12,14),(12,15),(12,16),(12,17),(12,18),(12,19),(12,20)])
#G.add_edges_from([(13,2),(13,3),(13,4),(13,5),(13,6),(13,7),(13,8),(13,9),(13,10),(13,11),(13,12),(13,1),(13,14),(13,15),(13,16),(13,17),(13,18),(13,19),(13,20)])
#G.add_edges_from([(14,2),(14,3),(14,4),(14,5),(14,6),(14,7),(14,8),(14,9),(14,10),(14,11),(14,12),(14,13),(14,1),(14,15),(14,16),(14,17),(14,18),(14,19),(14,20)])
#G.add_edges_from([(15,2),(15,3),(15,4),(15,5),(15,6),(15,7),(15,8),(15,9),(15,10),(15,11),(15,12),(15,13),(15,14),(15,1),(15,16),(15,17),(15,18),(15,19),(15,20)])
#G.add_edges_from([(16,2),(16,3),(16,4),(16,5),(16,6),(16,7),(16,8),(16,9),(16,10),(16,11),(16,12),(16,13),(16,14),(16,15),(16,1),(16,17),(16,18),(16,19),(16,20)])
#G.add_edges_from([(17,2),(17,3),(17,4),(17,5),(17,6),(17,7),(17,8),(17,9),(17,10),(17,11),(17,12),(17,13),(17,14),(17,15),(17,16),(17,1),(17,18),(17,19),(17,20)])
#G.add_edges_from([(18,2),(18,3),(18,4),(18,5),(18,6),(18,7),(18,8),(18,9),(18,10),(18,11),(18,12),(18,13),(18,14),(18,15),(18,16),(18,17),(18,1),(18,19),(18,20)])
#G.add_edges_from([(19,2),(19,3),(19,4),(19,5),(19,6),(19,7),(19,8),(19,9),(19,10),(19,11),(19,12),(19,13),(19,14),(19,15),(19,16),(19,17),(19,18),(19,1),(19,20)])
#G.add_edges_from([(20,2),(20,3),(20,4),(20,5),(20,6),(20,7),(20,8),(20,9),(20,10),(20,11),(20,12),(20,13),(20,14),(20,15),(20,16),(20,17),(20,18),(20,19),(20,1)])

pos=nx.get_node_attributes(G,'pos')
position=nx.get_node_attributes(X,'pos')

nodes = list(G.nodes)
print(nodes)
fig = plt.subplots(figsize =(30, 20))
fig, ax = plt.subplots()
nx.draw(G, pos=pos,node_size=270, node_color='#F620A4',edge_color='#BFB0B9', font_color='w', ax=ax)  # draw nodes and edges
nx.draw(X, pos=position ,node_size=270, node_color='#090FB2',node_shape='s', ax=ax)
nx.draw_networkx_labels(G, pos=pos,font_size=8) 
nx.draw_networkx_labels(X, pos=position,font_size=8,  font_color='w',) 
plt.axis("on")
ax.set_xlim(0,1000)
ax.set_ylim(0,1000)
ax.set_xlabel('Area Width (m)')
ax.set_ylabel('Area Lenght (m)')
ax.tick_params(left=True, bottom=True, labelleft=True, labelbottom=True)

plt.show()
